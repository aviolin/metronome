{"version":3,"sources":["worker.js","Canvas.js","Animation.js","Button.js","TempoInputs.js","Spinner.js","Metronome.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","Canvas","props","canvasRef","React","createRef","resetCanvas","bind","window","onorientationchange","onresize","this","drawCanvas","current","width","innerWidth","height","innerHeight","scrollTo","canvas","ctx","getContext","color","fillStyle","globalAlpha","fillRect","isplaying","percentage","beginPath","arc","Math","PI","fill","ref","id","Component","Animation","state","lastNoteDrawn","nextNoteTime","updateAnimation","rAF","requestAnimationFrame","currentTime","audiocontext","notesInQueue","queue","currentNote","length","time","splice","tempo","nbt","setState","cancelAnimationFrame","Button","increment","onClick","Slider","type","min","minTempo","max","maxTempo","step","value","onChange","TempoInputs","className","Spinner","label","Note","beat","click","PlayButton","playElement","icon","faPlay","stopElement","faStop","Metronome","noteLength","lookahead","scheduleAheadTime","nextBeat","nextBeatTime","nextClick","nextClickTime","isPlaying","audioUnlocked","noteQueue","handleChange","handleClick","handleTick","AudioContext","webkitAudioContext","audioContext","latencyHint","buffer","createBuffer","node","createBufferSource","start","timerWorker","worker","onmessage","e","data","console","log","postMessage","note","osc","createOscillator","gainNode","createGain","connect","destination","frequency","gain","setTargetAtTime","stop","secondsPerBeat","nextNote","scheduleNote","clicksPerBeat","beatsPerBar","concat","document","getElementById","classList","remove","offsetWidth","add","nextTempo","target","fadeAnimation","parseInt","close","SettingsButton","classes","isMenuOpen","Navbar","MobileMenu","faCheck","size","href","App","colorHighlight","maxBeats","minBeats","maxClicks","minClicks","nextBeats","nextClicks","updateColors","colorString","colors","split","root","documentElement","style","setProperty","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.061739de.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = []\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"5229467faaf4ec1feba7.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","import React from 'react';\r\n\r\nexport default class Canvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.canvasRef = React.createRef();\r\n    this.resetCanvas = this.resetCanvas.bind(this);\r\n\r\n    window.onorientationchange = this.resetCanvas;\r\n    window.onresize = this.resetCanvas;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    //this.drawCanvas();\r\n    this.resetCanvas();\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    this.drawCanvas();\r\n  }\r\n\r\n  resetCanvas() {\r\n    this.canvasRef.current.width = window.innerWidth;\r\n    this.canvasRef.current.height = window.innerHeight;\r\n    window.scrollTo(0,0); \r\n  }\r\n  \r\n  drawCanvas() {\r\n    const canvas = this.canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    let color = \"#333\";\r\n\r\n    ctx.fillStyle = color;\r\n    ctx.globalAlpha = 1;\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    if (!this.props.isplaying) return;\r\n    \r\n    let percentage = this.props.percentage;\r\n    1-percentage > .9 ? ctx.globalAlpha = 1-percentage*9 : ctx.globalAlpha = 0;\r\n\r\n    //ctx.globalAlpha = 1-percentage;\r\n\r\n    color = this.props.color;\r\n\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    //ctx.arc(canvas.width/2, canvas.height/3, percentage * 200, 0 + Math.PI / 2*this.props.curBeat, Math.PI / 2*this.props.curBeat+1);\r\n    ctx.arc(canvas.width/2, canvas.height/2, 75, 0, Math.PI * 2);\r\n\r\n    /*if (this.props.dir) {\r\n      ctx.arc(canvas.width/4*3 - canvas.width/8 - percentage*canvas.width/4, canvas.height/2, 50, 0, Math.PI * 2);\r\n      console.log(\"first: \" + percentage);\r\n    }\r\n    else {\r\n      ctx.arc(canvas.width/4 + canvas.width/8 + percentage*canvas.width/4, canvas.height/2, 50, 0, Math.PI * 2);\r\n      console.log(\"second:\" + percentage);\r\n\r\n    }*/\r\n    ctx.fill(); \r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <canvas ref={this.canvasRef} id=\"canvas\" height=\"100\" width=\"100\"/>  \r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport Canvas from './Canvas.js';\r\n\r\nexport default class Animation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      lastNoteDrawn: null,\r\n      nextNoteTime: 0,\r\n      percentage: 0,\r\n    }\r\n    \r\n    this.updateAnimation = this.updateAnimation.bind(this);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.rAF = requestAnimationFrame(this.updateAnimation);\r\n  }\r\n  \r\n  updateAnimation() {\r\n    if (this.props.isplaying) {\r\n\r\n      let currentTime = this.props.audiocontext.currentTime;\r\n      let notesInQueue = this.props.queue;\r\n      let currentNote = this.state.lastNoteDrawn;\r\n\r\n      while (notesInQueue.length && notesInQueue[0].time < currentTime) {\r\n          currentNote = notesInQueue[0];\r\n          notesInQueue.splice(0,1);\r\n      }\r\n\r\n      let percentage = ((60/this.props.tempo) - (this.props.nbt - currentTime)) / (60/this.props.tempo);\r\n      if (percentage < 0) percentage = 0;\r\n      if (percentage > 1) percentage = 1;\r\n\r\n      if (currentNote !== this.state.lastNoteDrawn) {\r\n\r\n        this.setState((state, props) => ({\r\n          percentage: percentage,\r\n          nextNoteTime: currentNote.time + (60 / props.tempo),\r\n        }));\r\n\r\n      } else {\r\n        this.setState((state, props) => ({\r\n          percentage: percentage\r\n        }));\r\n\r\n      }\r\n    } \r\n\r\n    this.rAF = requestAnimationFrame(this.updateAnimation);\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    cancelAnimationFrame(this.rAF);\r\n  }\r\n  \r\n  render () {\r\n    return (\r\n      <Canvas color={this.props.color} percentage={this.state.percentage} isplaying={this.props.isplaying} />\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class Button extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.increment === true) {\r\n            return(\r\n                <button name={\"increment-\" + this.props.id} onClick={this.props.onClick}>+</button>\r\n            )\r\n        } else {\r\n            return(\r\n                <button name={\"decrement-\" + this.props.id} onClick={this.props.onClick}>–</button>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Button from './Button';\r\n  \r\nfunction Slider(props) {\r\n  return (\r\n    <input \r\n      type=\"range\" \r\n      id=\"tempo\" \r\n      min={props.minTempo} \r\n      max={props.maxTempo} \r\n      step=\"1\"\r\n      value={props.tempo}\r\n      onChange={props.onChange}/>\r\n  )\r\n}\r\n\r\nexport default class TempoInputs extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"input-row\">\r\n          <div className=\"tempo-input-row\">\r\n            <Button increment={false} id=\"tempo\" onClick={this.props.onClick} />\r\n            <div className=\"tempo-label\">\r\n              <span className=\"large\" id=\"tempo-label\">{this.props.tempo}</span>\r\n            </div>\r\n            <Button increment={true} id=\"tempo\" onClick={this.props.onClick} />\r\n          </div>\r\n          <Slider onChange={this.props.onChange} tempo={this.props.tempo} maxTempo={this.props.maxTempo} minTempo={this.props.minTempo}/>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React from 'react';\r\nimport Button from './Button';\r\n\r\nexport default class Spinner extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <fieldset>\r\n        <label>{this.props.label}</label>\r\n        <div className=\"spinner\">\r\n          <Button increment={false} id={this.props.id} onClick={this.props.onClick} />\r\n          <span className=\"spinner-value\" id={this.props.id} >{this.props.value}</span>\r\n          <Button increment={true} id={this.props.id} onClick={this.props.onClick} />\r\n        </div>\r\n      </fieldset>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport Animation from './Animation';\r\nimport TempoInputs from './TempoInputs';\r\nimport Spinner from './Spinner';\r\nimport worker from 'workerize-loader!./worker' // eslint-disable-line import/no-webpack-loader-syntax\r\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faStop } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Note {\r\n  constructor(time = 0, beat = 0, click = 0) {\r\n    this.time = time;\r\n    this.beat = beat;\r\n    this.click = click;\r\n  }\r\n}\r\n\r\nfunction PlayButton(props) {\r\n  const playElement = <FontAwesomeIcon icon={faPlay} />;\r\n  const stopElement = <FontAwesomeIcon icon={faStop} />;\r\n  return (\r\n    <div className=\"play-container\">\r\n      <button className=\"button-play\" onClick={props.onClick} name=\"play-button\">\r\n        {props.value === \"Start\" ? playElement : stopElement}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n/***\r\n * \r\n * MAIN METRONOME COMPONENT\r\n * \r\n ***/\r\n\r\nexport default class Metronome extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {\r\n        noteLength: .05,\r\n        lookahead: 25,\r\n        scheduleAheadTime: .1,\r\n\r\n        tempo: 120,\r\n        maxTempo: 240,\r\n        minTempo: 30,\r\n\r\n        nextBeat: 0,\r\n        nextBeatTime: 0,\r\n\r\n        nextClick: 0,\r\n        nextClickTime: 0,\r\n\r\n        isPlaying: false,\r\n        audioUnlocked: false,\r\n        noteQueue: [],      \r\n      };\r\n      \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleClick = this.handleClick.bind(this);\r\n      this.handleTick = this.handleTick.bind(this);\r\n  \r\n      var AudioContext = window.AudioContext\r\n                      || window.webkitAudioContext\r\n                      || false; \r\n      this.audioContext = new AudioContext({\r\n        latencyHint: .1\r\n      });\r\n     \r\n      var buffer = this.audioContext.createBuffer(1, 1, 22050);\r\n      var node = this.audioContext.createBufferSource();\r\n      node.buffer = buffer;\r\n      node.start(this.audioContext.currentTime);\r\n  \r\n      this.timerWorker = worker();\r\n      this.timerWorker.onmessage = (e) => {\r\n        if (e.data === \"tick\") {\r\n          this.handleTick();\r\n        }\r\n        else\r\n          console.log(\"Worker: \" + e.data);\r\n      };\r\n      this.timerWorker.postMessage({\"interval\":this.state.lookahead});\r\n    }\r\n  \r\n    scheduleNote(note) {\r\n      var osc = this.audioContext.createOscillator();\r\n      var gainNode = this.audioContext.createGain();\r\n      osc.connect(gainNode);\r\n      gainNode.connect(this.audioContext.destination);\r\n\r\n      if (note.beat !== 0) {\r\n        osc.frequency.value = 440.0;\r\n      } else {\r\n        osc.frequency.value = 880.0;\r\n      }\r\n      if (note.click !== 0) {\r\n        osc.frequency.value = 330.0;\r\n      }\r\n  \r\n      osc.start(this.state.nextClickTime);\r\n      gainNode.gain.setTargetAtTime(0, this.state.nextClickTime + this.state.noteLength, 0.015);\r\n      osc.stop(this.state.nextClickTime + this.state.noteLength*2);\r\n    }\r\n  \r\n    handleTick() {\r\n      while (this.state.nextClickTime < this.audioContext.currentTime + this.state.scheduleAheadTime) {\r\n  \r\n        let nextBeat = this.state.nextBeat;\r\n        let nextClick = this.state.nextClick;\r\n        let secondsPerBeat = 60.0 / this.state.tempo;\r\n        let nextBeatTime = this.state.nextBeatTime;\r\n      \r\n        let nextNote = new Note(this.state.nextClickTime, nextBeat, nextClick);  \r\n        if (nextNote.click === 0) {\r\n          nextBeatTime = nextNote.time + secondsPerBeat;\r\n        }\r\n        this.scheduleNote(nextNote);\r\n  \r\n        if (this.props.clicksPerBeat > 1) {\r\n          nextClick++;\r\n          if (nextClick >= this.props.clicksPerBeat) {\r\n            nextClick = 0;\r\n            nextBeat++;\r\n            if (nextBeat >= this.props.beatsPerBar) {\r\n              nextBeat = 0;\r\n            }\r\n          }\r\n        } else {\r\n          nextBeat++;\r\n          nextClick = 0;\r\n          if (nextBeat >= this.props.beatsPerBar) {\r\n            nextBeat = 0;\r\n          }\r\n        }\r\n  \r\n        this.setState((state, props) => {\r\n          const queue = state.noteQueue.concat(nextNote);\r\n          return {\r\n            noteQueue: queue,\r\n            nextClickTime: state.nextClickTime + 1/props.clicksPerBeat * secondsPerBeat,\r\n            nextBeatTime: nextBeatTime,\r\n            nextBeat: nextBeat,\r\n            nextClick: nextClick\r\n          };\r\n        });\r\n      }\r\n    }\r\n  \r\n    fadeAnimation(id) {\r\n      document.getElementById(id).classList.remove(\"animation-fade\");\r\n      void document.getElementById(id).offsetWidth;\r\n      document.getElementById(id).classList.add(\"animation-fade\");\r\n    }\r\n    \r\n    handleClick(e) {\r\n      let nextTempo, nextBeats, nextClicks = 0;\r\n      switch (e.target.name) {\r\n        case \"increment-tempo\":\r\n          this.fadeAnimation(\"tempo-label\");\r\n          nextTempo = parseInt(this.state.tempo)+1;\r\n          this.setState(state => ({tempo: nextTempo > state.maxTempo ? state.tempo : nextTempo}));\r\n          return;\r\n        case \"decrement-tempo\":\r\n          this.fadeAnimation(\"tempo-label\");\r\n          nextTempo = parseInt(this.state.tempo)-1;\r\n          this.setState(state => ({tempo: nextTempo < state.minTempo ? state.tempo : nextTempo}));\r\n          return;\r\n        /*case \"increment-beats\":\r\n          this.fadeAnimation(\"beats\");\r\n          nextBeats = parseInt(this.state.beatsPerBar)+1;\r\n          this.setState(state => ({beatsPerBar: nextBeats > state.maxBeats ? state.beatsPerBar : nextBeats}));\r\n          return;\r\n        case \"decrement-beats\":\r\n          this.fadeAnimation(\"beats\");\r\n          nextBeats = parseInt(this.state.beatsPerBar)-1;\r\n          this.setState(state => ({beatsPerBar: nextBeats < state.minBeats ? state.beatsPerBar : nextBeats}));\r\n          return;\r\n        case \"increment-clicks\":\r\n          this.fadeAnimation(\"clicks\");\r\n          nextClicks = parseInt(this.state.clicksPerBeat)+1;\r\n          this.setState(state => ({clicksPerBeat: nextClicks > state.maxClicks ? state.clicksPerBeat : nextClicks}));\r\n          return;\r\n        case \"decrement-clicks\":\r\n          this.fadeAnimation(\"clicks\");\r\n          nextClicks = parseInt(this.state.clicksPerBeat)-1;\r\n          this.setState(state => ({clicksPerBeat: nextClicks < state.minClicks ? state.clicksPerBeat : nextClicks}));\r\n          return;*/\r\n        default:\r\n          break;\r\n      }\r\n\r\n      this.timerWorker.postMessage(this.state.isPlaying ? \"stop\" : \"start\");\r\n\r\n      if (this.state.isPlaying) {\r\n        this.audioContext.close();\r\n\r\n        this.setState(state => ({\r\n          isPlaying: !state.isPlaying,\r\n          audioUnlocked: false,\r\n          noteQueue: [],\r\n          nextClickTime: 0,\r\n          nextBeat: 0,\r\n          nextClick: 0\r\n        }));\r\n      }\r\n      else {\r\n        let AudioContext = window.AudioContext\r\n                         || window.webkitAudioContext\r\n                         || false; \r\n        this.audioContext = new AudioContext({\r\n          latencyHint: .1\r\n        });\r\n\r\n        if (!this.state.audioUnlocked) {\r\n          var buffer = this.audioContext.createBuffer(1, 1, 22050);\r\n          var node = this.audioContext.createBufferSource();\r\n          node.buffer = buffer;\r\n          node.start(this.audioContext.currentTime);\r\n        }\r\n\r\n        this.setState(state => ({\r\n          isPlaying: !state.isPlaying,\r\n          audioUnlocked: true\r\n        }));\r\n      }\r\n    }\r\n    \r\n    handleChange(e) {\r\n      this.fadeAnimation(\"tempo-label\");\r\n      this.setState({tempo: e.target.value});\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"metronome\">\r\n          <Animation \r\n              tempo={this.state.tempo} \r\n              color={this.props.color} \r\n              nbt={this.state.nextBeatTime} \r\n              isplaying={this.state.isPlaying} \r\n              queue={this.state.noteQueue} \r\n              audiocontext={this.audioContext} />\r\n          <div className=\"inputs\">\r\n            <PlayButton value={this.state.isPlaying ? \"Stop\" : \"Start\"} onClick={this.handleClick} />\r\n            <TempoInputs \r\n              onChange={this.handleChange} \r\n              onClick={this.handleClick} \r\n              tempo={this.state.tempo} \r\n              maxTempo={this.state.maxTempo} \r\n              minTempo={this.state.minTempo} />\r\n                {/*}\r\n            <div className=\"input-row\">\r\n              <div className=\"spinner-inputs\">\r\n                <Spinner label=\"Beats per bar\" id=\"beats\" onClick={this.handleClick} value={this.state.beatsPerBar} />\r\n                <Spinner label=\"Clicks per beat\" id=\"clicks\" onClick={this.handleClick} value={this.state.clicksPerBeat} />\r\n              </div>\r\n            </div>\r\n            */}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Metronome from './Metronome';\nimport Spinner from './Spinner';\nimport './App.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction SettingsButton(props) {\n  let classes = \"button-theme-toggle hamburger\";\n  if (props.isMenuOpen) {\n    classes = \"button-theme-toggle hamburger open\";\n  }\n\n  return (\n      <button className={classes} name=\"menu-toggle\" onClick={props.onClick}>\n        <span></span>\n        <span></span>\n        <span></span>\n      </button>\n  );\n}\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"navbar\">\n        <div className=\"logo\">\n          Zen Metronome\n        </div>\n          <SettingsButton onClick={this.props.onClick} isMenuOpen={this.props.isMenuOpen} />\n      </div>\n    );\n  }\n}\n\nclass MobileMenu extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let classes = \"mobile-menu\";\n    if (this.props.isMenuOpen) {\n      classes += \" mobile-menu-open\";\n    }\n\n    return(\n      <div className={classes}>\n        <div className=\"spinner-inputs\">\n          <Spinner label=\"Beats per bar\" id=\"beats\" onClick={this.props.onClick} value={this.props.beatsPerBar} />\n          <Spinner label=\"Clicks per beat\" id=\"clicks\" onClick={this.props.onClick} value={this.props.clicksPerBeat} />\n        </div>\n        <div className=\"menu-row\">\n          <button className=\"color color-purple\" id=\"col1\" value=\"#d7d|#f7f\" onClick={this.props.onClick}>\n            {this.props.color === \"#d7d\" ? <FontAwesomeIcon icon={faCheck} size=\"xs\"/> : null}\n          </button>\n          <button className=\"color color-blue\" id=\"col2\" value=\"#77d|#77f\" onClick={this.props.onClick}>\n            {this.props.color === \"#77d\" ? <FontAwesomeIcon icon={faCheck} size=\"xs\"/> : null}\n          </button>\n          <button className=\"color color-green\" id=\"col3\" value=\"#7d7|#7f7\" onClick={this.props.onClick}>\n            {this.props.color === \"#7d7\" ? <FontAwesomeIcon icon={faCheck} size=\"xs\"/> : null}\n          </button>\n          <button className=\"color color-grey\" id=\"col4\" value=\"#777|#999\" onClick={this.props.onClick}>\n            {this.props.color === \"#777\" ? <FontAwesomeIcon icon={faCheck} size=\"xs\"/> : null}\n          </button>\n        </div>\n        <div className=\"menu-row\">\n          <a href=\"https://github.com/aviolin/metronome\" target=\"_blank\">View the source on Github</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      color: \"#d7d\",\n      colorHighlight: \"#f7f\",\n      isMenuOpen: false,\n      beatsPerBar: 1,\n      maxBeats: 12,\n      minBeats: 1,\n      clicksPerBeat: 1,\n      maxClicks: 12,\n      minClicks: 1\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  fadeAnimation(id) {\n    document.getElementById(id).classList.remove(\"animation-fade\");\n    void document.getElementById(id).offsetWidth;\n    document.getElementById(id).classList.add(\"animation-fade\");\n  }\n\n  handleClick(e) {\n    let nextBeats, nextClicks = 0;\n      switch (e.target.name) {\n        case \"menu-toggle\":\n          this.setState(state => ({isMenuOpen: !state.isMenuOpen }));\n          return;\n        case \"increment-beats\":\n          this.fadeAnimation(\"beats\");\n          nextBeats = parseInt(this.state.beatsPerBar)+1;\n          this.setState(state => ({beatsPerBar: nextBeats > state.maxBeats ? state.beatsPerBar : nextBeats}));\n          return;\n        case \"decrement-beats\":\n          this.fadeAnimation(\"beats\");\n          nextBeats = parseInt(this.state.beatsPerBar)-1;\n          this.setState(state => ({beatsPerBar: nextBeats < state.minBeats ? state.beatsPerBar : nextBeats}));\n          return;\n        case \"increment-clicks\":\n          this.fadeAnimation(\"clicks\");\n          nextClicks = parseInt(this.state.clicksPerBeat)+1;\n          this.setState(state => ({clicksPerBeat: nextClicks > state.maxClicks ? state.clicksPerBeat : nextClicks}));\n          return;\n        case \"decrement-clicks\":\n          this.fadeAnimation(\"clicks\");\n          nextClicks = parseInt(this.state.clicksPerBeat)-1;\n          this.setState(state => ({clicksPerBeat: nextClicks < state.minClicks ? state.clicksPerBeat : nextClicks}));\n          return;\n        default:\n          break;\n      }\n\n    \n    this.updateColors(e.target.value);\n    this.fadeAnimation(e.target.id);\n\n  }\n\n  updateColors(colorString) {\n    let colors = colorString.split(\"|\");\n\n\n\n    let root = document.documentElement;\n    root.style.setProperty('--accentcolor', colors[0]);\n    root.style.setProperty('--accentcolorhighlight', colors[1]);\n\n    this.setState(state => ({\n      color: colors[0],\n      colorHighlight: colors[1],\n    }));\n  }\n\n  render() {\n    return(\n      <div>\n        <Navbar onClick={this.handleClick} isMenuOpen={this.state.isMenuOpen}/>\n        <MobileMenu isMenuOpen={this.state.isMenuOpen} onClick={this.handleClick} color={this.state.color} beatsPerBar={this.state.beatsPerBar} clicksPerBeat={this.state.clicksPerBeat} />\n        <Metronome color={this.state.color} colorHighlight={this.state.colorHighlight} beatsPerBar={this.state.beatsPerBar} clicksPerBeat={this.state.clicksPerBeat} />\n      </div>  \n    ); \n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}