{"version":3,"sources":["index.js"],"names":["Button","props","playElement","icon","faPlay","stopElement","faStop","className","onClick","name","value","Slider","type","id","min","max","step","tempo","onChange","Canvas","state","canvasRef","React","createRef","resetCanvas","bind","window","onorientationchange","onresize","this","drawCanvas","current","width","innerWidth","height","innerHeight","scrollTo","canvas","ctx","getContext","color","fillStyle","globalAlpha","fillRect","isplaying","percentage","nextnotetime","currenttime","tick","strokeStyle","beginPath","lineWidth","arc","Math","PI","stroke","fill","ref","Component","Animation","lastNoteDrawn","alpha","percentToNextNote","nextNoteTime","updateAnimation","rAF","requestAnimationFrame","currentTime","audiocontext","notesInQueue","queue","currentNote","length","time","splice","setState","cancelAnimationFrame","TempoInputs","RadioButton","radioElement","default","defaultChecked","htmlFor","RadioInputs","label","Metronome","maxTempo","minTempo","beatsPerBar","clicksPerBeat","nextBeat","nextClick","isPlaying","lookahead","scheduleAheadTime","noteLength","audioUnlocked","noteQueue","handleChange","handleClick","handleTick","audioContext","AudioContext","timerWorker","Worker","onmessage","e","data","console","log","postMessage","note","osc","createOscillator","gainNode","createGain","connect","destination","beat","frequency","click","start","gain","setTargetAtTime","stop","nextNote","Note","scheduleNote","concat","secondsPerBeat","target","buffer","createBuffer","node","createBufferSource","Navbar","faMoon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68b15605.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// get our fontawesome imports\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStop } from \"@fortawesome/free-solid-svg-icons\";\nimport { faMoon } from \"@fortawesome/free-solid-svg-icons\";\n\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n//import Metronome from './App';\n\n\n\n\n\n/***\n * \n * INPUTS\n * \n */\n\n\nfunction Button(props) {\n  const playElement = <FontAwesomeIcon icon={faPlay} />;\n  const stopElement = <FontAwesomeIcon icon={faStop} />;\n  return (\n    <button \n      className=\"button-play\" \n      onClick={props.onClick}\n      name=\"play-button\"\n    >\n      {props.value === \"Start\" ? playElement : stopElement}\n    </button>\n  );\n}\n\nfunction Slider(props) {\n  return (\n    <input \n      type=\"range\" \n      id=\"tempo\" \n      min=\"30\" \n      max=\"300\" \n      step=\"1\"\n      value={props.tempo}\n      onChange={props.onChange}/>\n  )\n}\n\n\n\n\n\n\n\n/***\n * \n * CANVAS\n * \n */\n\nclass Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {};\n    this.canvasRef = React.createRef();\n\n    this.resetCanvas = this.resetCanvas.bind(this);\n\n    window.onorientationchange = this.resetCanvas;\n    window.onresize = this.resetCanvas;\n  }\n  \n  componentDidMount() {\n    this.drawCanvas();\n    this.resetCanvas();\n  }\n  \n  componentDidUpdate() {\n    this.drawCanvas();\n  }\n\n  resetCanvas() {\n    this.canvasRef.current.width = window.innerWidth;\n    this.canvasRef.current.height = window.innerHeight;\n    window.scrollTo(0,0); \n  }\n  \n  drawCanvas() {\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    let color = \"#333\";\n    ctx.fillStyle = color;\n    ctx.globalAlpha = 1;\n\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    if (!this.props.isplaying) return;\n\n    let percentage = ((60/this.props.tempo) - (this.props.nextnotetime - this.props.currenttime)) / (60/this.props.tempo);\n    if (percentage < 0) percentage = 0;\n\n    color = \"#dd77dd\";\n    if (this.props.tick === true) {\n      color = \"#eee\";\n    }\n    ctx.strokeStyle = color;\n    ctx.globalAlpha = 1-percentage; //this.props.alpha;\n    ctx.beginPath();\n    ctx.lineWidth = 100-percentage*100;\n    ctx.arc(canvas.width/2, canvas.height/3, percentage * 200, 0, 2 * Math.PI);\n    \n    ctx.stroke(); \n    ctx.fillStyle = \"#ffaaff\";\n    ctx.fill();    \n  }\n  \n  render() {\n    return (\n      <canvas ref={this.canvasRef} id=\"canvas\" height=\"100\" width=\"100\"/>  \n    );\n  }\n}\n\nclass Animation extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      tick: false,\n      lastNoteDrawn: null,\n      alpha: 0,\n      percentToNextNote: 0,\n      nextNoteTime: 0\n    }\n    \n    this.updateAnimation = this.updateAnimation.bind(this);\n  }\n  \n  componentDidMount() {\n    this.rAF = requestAnimationFrame(this.updateAnimation);\n  }\n  \n  updateAnimation() {\n    if (this.props.isplaying) {\n\n      let currentTime = this.props.audiocontext.currentTime;\n      let notesInQueue = this.props.queue;\n      let currentNote = this.state.lastNoteDrawn;\n\n  \n      while (notesInQueue.length && notesInQueue[0].time < currentTime) {\n          currentNote = notesInQueue[0];\n          notesInQueue.splice(0,1);\n      }\n\n      if (currentNote !== this.state.lastNoteDrawn) {\n        this.setState((state, props) => ({\n          tick: true,\n          alpha: 1,\n          percentToNextNote: 0,\n          nextNoteTime: currentNote.time + (60 / props.tempo)\n\n        }));\n      } else {\n\n        \n\n        this.setState((state, props) => ({\n          tick: false,\n          alpha: state.alpha - .1 < 0 ? 0 : state.alpha-.1,\n        }));\n      }\n    } else {\n        this.setState(state => ({\n          tick: false,\n          alpha: state.alpha - .1 < 0 ? 0 : state.alpha-.1\n        }));\n    }\n    \n    this.rAF = requestAnimationFrame(this.updateAnimation);\n  }\n  \n  componentWillUnmount() {\n    cancelAnimationFrame(this.rAF);\n  }\n  \n  render () {\n    return (\n      <Canvas tick={this.state.tick} tempo={this.props.tempo} nextnotetime={this.state.nextNoteTime} alpha={this.state.alpha} currenttime={this.props.audiocontext.currentTime} isplaying={this.props.isplaying}/>\n    )\n  }\n}\n\n\n\n\n\n\n\nclass TempoInputs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"tempo-inputs\">\n        <div className=\"tempo-input-row\">\n          <button className=\"button-tempo large\" name=\"decrement-tempo\" onClick={this.props.onClick}>-</button>\n          <div className=\"tempo-label\">\n            <span className=\"large\">{this.props.tempo}</span> BPM\n          </div>\n          <button className=\"button-tempo large\" name=\"increment-tempo\" onClick={this.props.onClick}>+</button>\n        </div>\n        <Slider onChange={this.props.onChange} tempo={this.props.tempo}/>\n      </div>\n    )\n  }\n}\n\nfunction RadioButton(props) {\n  var radioElement = <input \n                        className=\"checkbox\"\n                        type=\"radio\" \n                        id={props.id + \"-\" + props.value}\n                        name={props.id}\n                        value={props.value}\n                      />\n  if (props.default===props.id) {\n    radioElement = <input \n                      className=\"checkbox\"\n                      type=\"radio\" \n                      id={props.id + \"-\" + props.value}\n                      name={props.id}\n                      value={props.value}\n                      defaultChecked\n                    />\n  }\n  return (\n    <span>\n      {radioElement}\n      <label htmlFor={props.id + \"-\" + props.value}>{props.value}</label>\n    </span>\n  )\n}\n\nclass RadioInputs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let label = this.props.label;\n    if (this.props.value > 1) {\n      if (this.props.id === \"beats\") {\n        label = \" beats per bar\";\n      } else {\n        label = \" clicks per beat\";\n      }\n    }\n\n    return (\n      <div className=\"radio-input-section\">\n        <div className=\"label\"><b>{this.props.value}</b>{label}</div>\n        <div className=\"radio-scrollable\"  onChange={this.props.onChange}>\n          <RadioButton value=\"1\" id={this.props.id} default=\"clicks\" />\n          <RadioButton value=\"2\" id={this.props.id}/>\n          <RadioButton value=\"3\" id={this.props.id}/>\n          <RadioButton value=\"4\" id={this.props.id} default=\"beats\" />\n          <RadioButton value=\"5\" id={this.props.id}/>\n          <RadioButton value=\"6\" id={this.props.id}/>\n          <RadioButton value=\"7\" id={this.props.id}/>\n          <RadioButton value=\"8\" id={this.props.id}/>\n          <RadioButton value=\"9\" id={this.props.id}/>\n          <RadioButton value=\"10\" id={this.props.id}/>\n          <RadioButton value=\"11\" id={this.props.id}/>\n          <RadioButton value=\"12\" id={this.props.id}/>\n        </div>\n      </div>\n    )\n  }\n\n}\n\n\n\n\n/***\n * \n * MAIN METRONOME COMPONENT\n * \n */\n\nclass Metronome extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      tempo: 120,\n      maxTempo: 300,\n      minTempo: 30,\n      beatsPerBar: 4,\n      clicksPerBeat: 1,\n      nextBeat: 0,\n      nextClick: 0,\n      isPlaying: false,\n      lookahead: 25,\n      scheduleAheadTime: .1,\n      nextNoteTime: 0,\n      noteLength: .1,\n      audioUnlocked: false,\n      noteQueue: [],      \n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleTick = this.handleTick.bind(this);\n\n    this.audioContext = new AudioContext();\n\n    this.timerWorker = new Worker(\"/worker.js\");\n\n    this.timerWorker.onmessage = (e) => {\n        if (e.data === \"tick\") {\n            this.handleTick();\n        }\n        else\n            console.log(\"message: \" + e.data);\n    };\n\n\n    this.timerWorker.postMessage({\"interval\":this.state.lookahead});\n    \n  }\n\n  scheduleNote(note) {\n    console.log(\"Scheduling note to be played at: \" + this.state.nextNoteTime);\n    var osc = this.audioContext.createOscillator();\n    var gainNode = this.audioContext.createGain();\n    osc.connect(gainNode);\n    //osc.connect( this.audioContext.destination );\n    gainNode.connect(this.audioContext.destination);\n    if (note.beat != 0) {\n      osc.frequency.value = 440.0;\n    } else {\n      osc.frequency.value = 880.0;\n    }\n    if (note.click != 0) {\n      osc.frequency.value = 330.0;\n    }\n\n    osc.start( this.state.nextNoteTime);\n    gainNode.gain.setTargetAtTime(0, this.state.nextNoteTime + this.state.noteLength, 0.015);\n    osc.stop( this.state.nextNoteTime + this.state.noteLength*2);\n\n  }\n\n  handleTick() {\n    while (this.state.nextNoteTime < this.audioContext.currentTime + this.state.scheduleAheadTime) {\n\n      let nextBeat = this.state.nextBeat;\n      let nextClick = this.state.nextClick;\n    \n      let nextNote = new Note(this.state.nextNoteTime, nextBeat, nextClick);\n      this.scheduleNote(nextNote);\n\n      if (this.state.clicksPerBeat > 1) {\n        nextClick++;\n        if (nextClick >= this.state.clicksPerBeat) {\n          nextClick = 0;\n          nextBeat++;\n          if (nextBeat >= this.state.beatsPerBar) nextBeat = 0;\n        }\n      } else {\n        nextBeat++;\n        if (nextBeat >= this.state.beatsPerBar) nextBeat = 0;\n      }\n\n      \n\n      this.setState(state => {\n        const queue = state.noteQueue.concat(nextNote);\n        let secondsPerBeat = 60.0 / state.tempo;\n        return {\n          noteQueue: queue,\n          nextNoteTime: state.nextNoteTime + 1/state.clicksPerBeat * secondsPerBeat,\n          nextBeat: nextBeat,\n          nextClick: nextClick\n        };\n      });\n    }\n  }\n  \n  handleClick(e) {\n\n    if (e.target.name === \"increment-tempo\") {\n      this.setState(state => ({tempo: state.tempo+1 > state.maxTempo ? state.tempo : state.tempo+1}));\n      return;\n    } else if (e.target.name === \"decrement-tempo\") {\n      this.setState(state => ({tempo: state.tempo-1 < state.minTempo ? state.tempo : state.tempo-1}));\n      return;\n    }\n\n    this.audioContext = new AudioContext();\n\n\n    this.timerWorker.postMessage(this.state.isPlaying ? \"stop\" : \"start\");\n\n    if (!this.state.audioUnlocked) {\n      var buffer = this.audioContext.createBuffer(1, 1, 22050);\n      var node = this.audioContext.createBufferSource();\n      node.buffer = buffer;\n      node.start(this.audioContext.currentTime);\n    }\n\n    this.setState(state => ({\n      isPlaying: !state.isPlaying,\n      audioUnlocked: true,\n      noteQueue: [],\n      nextNoteTime: 0,\n      nextBeat: 0,\n      nextClick: 0\n    }));\n  }\n  \n  handleChange(e) {\n    if (e.target.name === \"beats\") {\n      this.setState({beatsPerBar: e.target.value});\n    } else if (e.target.name===\"clicks\") {\n      this.setState({clicksPerBeat: e.target.value});\n    } else {\n      this.setState({tempo: e.target.value});\n    }\n\n  }\n  \n  render() {\n    return (\n      <div className=\"metronome\">\n        <Animation tempo={this.state.tempo} isplaying={this.state.isPlaying} queue={this.state.noteQueue} audiocontext={this.audioContext} />\n        <div className=\"inputs\">\n          <Button \n            value={this.state.isPlaying ? \"Stop\" : \"Start\"}\n            onClick={this.handleClick} />\n          <TempoInputs onChange={this.handleChange} tempo={this.state.tempo} onClick={this.handleClick}/>\n          <RadioInputs label=\" beat per bar\" id=\"beats\" onChange={this.handleChange} value={this.state.beatsPerBar} />\n          <RadioInputs label=\" click per beat\" id=\"clicks\" onChange={this.handleChange} value={this.state.clicksPerBeat} />\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\nclass Navbar extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n\n      <div className=\"navbar\">\n        <div className=\"logo\">\n          Zen Metronome\n        </div>\n        <button className=\"button-theme-toggle\">\n          <FontAwesomeIcon icon={faMoon} />\n        </button>\n      </div>\n\n    ) \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\nclass Note {\n  constructor(time = 0, beat = 0, click = 0) {\n    this.time = time;\n    this.beat = beat;\n    this.click = click;\n  }\n}\n\n\n// ========================================\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navbar />\n    <Metronome />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}