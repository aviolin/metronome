{"version":3,"sources":["worker.js","Canvas.js","Animation.js","TempoInputs.js","Metronome.js","Navbar.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","Canvas","props","canvasRef","React","createRef","resetCanvas","bind","window","onorientationchange","onresize","curNote","this","drawCanvas","current","width","innerWidth","scrollTo","canvas","ctx","getContext","fillStyle","theme","background","fillRect","height","circleRadius","Math","min","beatsPerBar","i","light","shadowBlur","beat","click","isplaying","shadowColor","beginPath","arc","PI","fill","className","ref","id","Component","Animation","state","lastNoteDrawn","updateAnimation","rAF","requestAnimationFrame","currentTime","audiocontext","notesInQueue","queue","currentNote","length","time","splice","setState","cancelAnimationFrame","TempoInputs","onClick","tempo","type","minTempo","max","maxTempo","step","value","onChange","Note","PlayButton","playElement","icon","faPlay","stopElement","faStop","Settings","handleChange","clicksPerBeat","Metronome","noteLength","lookahead","scheduleAheadTime","nextBeat","nextBeatTime","nextClick","nextClickTime","isPlaying","audioUnlocked","noteQueue","handleClick","handleTick","AudioContext","webkitAudioContext","audioContext","sampleRate","unlockAudio","timerWorker","worker","onmessage","e","data","postMessage","note","osc","createOscillator","gainNode","createGain","connect","destination","frequency","start","gain","setTargetAtTime","stop","secondsPerBeat","nextNote","scheduleNote","concat","buffer","createBuffer","node","createBufferSource","nextTempo","target","parseInt","close","nbt","Navbar","faMusic","toggleTheme","faSun","faMoon","App","lightTheme","darkTheme","href","rel","faGithub","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FACI,IAAIA,EAAa,EAAQ,IACrBC,EAAU,GACdC,EAAOC,QAAU,WAChB,IAAIC,EAAI,IAAIC,OAAO,IAA0B,iCAAkC,CAAEC,KAAM,qBAGvF,OAFAN,EAAWI,EAAGH,GAEPG,I,gMCASG,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,UAAYC,IAAMC,YACvB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAEnBC,OAAOC,oBAAsB,EAAKH,YAClCE,OAAOE,SAAW,EAAKJ,YAEvB,EAAKK,QAAU,KATE,E,gEAajBC,KAAKN,gB,2CAILM,KAAKC,e,oCAILD,KAAKT,UAAUW,QAAQC,MAAQP,OAAOQ,WACtCR,OAAOS,SAAS,EAAE,GAClBL,KAAKC,e,mCAIL,IAAMK,EAASN,KAAKT,UAAUW,QACxBK,EAAMD,EAAOE,WAAW,MAE9BD,EAAIE,UAAYT,KAAKV,MAAMoB,MAAMC,WACjCJ,EAAIK,SAAS,EAAG,EAAGN,EAAOH,MAAOG,EAAOO,QAIxC,IAFA,IAAIC,EAAeC,KAAKC,IAAIV,EAAOH,MAAQH,KAAKV,MAAM2B,YAAc,EAAG,IAE9DC,EAAI,EAAGA,EAAIlB,KAAKV,MAAM2B,YAAaC,IAAK,CAAC,IAAD,IAC/CX,EAAIE,UAAYT,KAAKV,MAAMoB,MAAMS,MACjCZ,EAAIa,WAAa,GAEb,UAAApB,KAAKV,MAAMS,eAAX,eAAoBsB,QAASH,GAAkC,IAA7BlB,KAAKV,MAAMS,QAAQuB,QACvDtB,KAAKD,QAAUC,KAAKV,MAAMS,UAGxB,UAAAC,KAAKD,eAAL,eAAcsB,QAASH,IAGrBlB,KAAKV,MAAMiC,WACbhB,EAAIE,UAAY,MAChBF,EAAIiB,YAAc,MAClBjB,EAAIa,WAAaN,GAEjBd,KAAKD,QAAU,MAInBQ,EAAIkB,YACJlB,EAAImB,IAAIR,GAAKZ,EAAOH,MAAMH,KAAKV,MAAM2B,aAAgBX,EAAOH,MAAMH,KAAKV,MAAM2B,YAAY,EAAIX,EAAOO,OAAO,EAAGC,EAAc,EAAa,EAAVC,KAAKY,IACpIpB,EAAIqB,U,+BAKN,OACE,qBAAKC,UAAU,aAAf,SACE,wBAAQC,IAAK9B,KAAKT,UAAWwC,GAAG,SAASlB,OAAO,MAAMV,MAAM,c,GAjEhCX,IAAMwC,WCIrBC,E,kDACnB,WAAY3C,GAAQ,IAAD,8BACjB,cAAMA,IAED4C,MAAQ,CACXC,cAAe,KAGfpC,QAAS,MAGX,EAAKqC,gBAAkB,EAAKA,gBAAgBzC,KAArB,gBAVN,E,gEAcjBK,KAAKqC,IAAMC,sBAAsBtC,KAAKoC,mB,wCAItC,GAAIpC,KAAKV,MAAMiC,UAAW,CAMxB,IAJA,IAAIgB,EAAcvC,KAAKV,MAAMkD,aAAaD,YACtCE,EAAezC,KAAKV,MAAMoD,MAC1BC,EAAc3C,KAAKkC,MAAMC,cAEtBM,EAAaG,QAAUH,EAAa,GAAGI,KAAON,GACjDI,EAAcF,EAAa,GAC3BA,EAAaK,OAAO,EAAE,GAoB1B9C,KAAK+C,UAAS,iBAAO,CACnBhD,QAAS4C,MAIb3C,KAAKqC,IAAMC,sBAAsBtC,KAAKoC,mB,6CAItCY,qBAAqBhD,KAAKqC,O,+BAI1B,OACE,cAAC,EAAD,CAEEd,UAAWvB,KAAKV,MAAMiC,UACtBN,YAAajB,KAAKV,MAAM2B,YACxBlB,QAASC,KAAKkC,MAAMnC,QACpBW,MAAOV,KAAKV,MAAMoB,Y,GAlEalB,IAAMwC,WCJxBiB,E,kDACnB,WAAY3D,GAAQ,uCACZA,G,qDAIN,OACE,qCACE,sBAAKuC,UAAU,kBAAf,UACE,wBACEzC,KAAM,kBACN8D,QAASlD,KAAKV,MAAM4D,QACpBrB,UAAU,aAHZ,oBAMA,sBAAKA,UAAU,cAAf,UACE,sBAAME,GAAG,cAAT,SAAwB/B,KAAKV,MAAM6D,QAAa,sBAAMtB,UAAU,YAAhB,wBAGlD,wBACEzC,KAAM,kBACN8D,QAASlD,KAAKV,MAAM4D,QACpBrB,UAAU,aAHZ,kBAOF,qBAAKA,UAAU,aAAf,SACE,uBACEuB,KAAK,QACLrB,GAAG,QACHf,IAAKhB,KAAKV,MAAM+D,SAChBC,IAAKtD,KAAKV,MAAMiE,SAChBC,KAAK,IACLC,MAAOzD,KAAKV,MAAM6D,MAClBO,SAAU1D,KAAKV,MAAMoE,oB,GAlCQlE,IAAMwC,WCezC2B,EACJ,aAA4C,IAAhCd,EAA+B,uDAAxB,EAAGxB,EAAqB,uDAAd,EAAGC,EAAW,uDAAH,EAAG,oBACzCtB,KAAK6C,KAAOA,EACZ7C,KAAKqB,KAAOA,EACZrB,KAAKsB,MAAQA,GAIjB,SAASsC,EAAWtE,GAClB,IAAMuE,EAAc,cAAC,IAAD,CAAiBC,KAAMC,MACrCC,EAAc,cAAC,IAAD,CAAiBF,KAAMG,MAC3C,OACE,qBAAKpC,UAAU,WAAf,SACE,wBAAQA,UAAU,mBAAmBqB,QAAS5D,EAAM4D,QAAS9D,KAAK,cAAlE,SACmB,UAAhBE,EAAMmE,MAAoBI,EAAcG,MAMjD,SAASE,EAAS5E,GAChB,OACE,sBAAKuC,UAAU,eAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,yBACE4B,MAAOnE,EAAM2B,YACbyC,SAAUpE,EAAM6E,aAChB/E,KAAK,cAHP,UAKE,wBAAQqE,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,sBAIJ,qBAAK5B,UAAU,iBAAf,SACE,yBACE4B,MAAOnE,EAAM8E,cACbV,SAAUpE,EAAM6E,aAChB/E,KAAK,eAHP,UAKE,wBAAQqE,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,8B,IAaWY,E,kDACnB,WAAY/E,GAAQ,IAAD,uBACjB,cAAMA,IAED4C,MAAQ,CACXoC,WAAY,IACZC,UAAW,GACXC,kBAAmB,GAEnBrB,MAAO,IACPI,SAAU,IACVF,SAAU,GAEVoB,SAAU,EACVC,aAAc,EAEdC,UAAW,EACXC,cAAe,EAEfC,WAAW,EACXC,eAAe,EACfC,UAAW,GAEX9D,YAAa,EACbmD,cAAe,GAGjB,EAAKD,aAAe,EAAKA,aAAaxE,KAAlB,gBACpB,EAAKqF,YAAc,EAAKA,YAAYrF,KAAjB,gBACnB,EAAKsF,WAAa,EAAKA,WAAWtF,KAAhB,gBAElB,IAAIuF,EAAetF,OAAOsF,cACrBtF,OAAOuF,qBACP,EAhCY,OAiCjB,EAAKC,aAAe,IAAIF,EAAa,CAAEG,WAAY,QAEnD,EAAKC,cAEL,EAAKC,YAAcC,MACnB,EAAKD,YAAYE,UAAY,SAACC,GACb,SAAXA,EAAEC,MACJ,EAAKV,cAKT,EAAKM,YAAYK,YAAY,CAAE,SAAW,EAAK1D,MAAMqC,YA7CpC,E,yDAgDNsB,GACX,IAAIC,EAAM9F,KAAKoF,aAAaW,mBACxBC,EAAWhG,KAAKoF,aAAaa,aACjCH,EAAII,QAAQF,GACZA,EAASE,QAAQlG,KAAKoF,aAAae,aAEjB,IAAdN,EAAKxE,KACPyE,EAAIM,UAAU3C,MAAQ,IAEtBqC,EAAIM,UAAU3C,MAAQ,IAEL,IAAfoC,EAAKvE,QACPwE,EAAIM,UAAU3C,MAAQ,KAGxBqC,EAAIO,MAAMrG,KAAKkC,MAAM0C,eACrBoB,EAASM,KAAKC,gBAAgB,EAAGvG,KAAKkC,MAAM0C,cAAgB5E,KAAKkC,MAAMoC,WAAY,MACnFwB,EAAIU,KAAKxG,KAAKkC,MAAM0C,cAAsC,EAAtB5E,KAAKkC,MAAMoC,c,mCAGnC,IAAD,OACX,GAAKtE,KAAKkC,MAAM2C,UAEhB,IAHW,iBAIT,IAAIJ,EAAW,EAAKvC,MAAMuC,SACtBE,EAAY,EAAKzC,MAAMyC,UACvB8B,EAAiB,GAAO,EAAKvE,MAAMiB,MACnCuB,EAAe,EAAKxC,MAAMwC,aAE1BgC,EAAW,IAAI/C,EAAK,EAAKzB,MAAM0C,cAAeH,EAAUE,GACrC,IAAnB+B,EAASpF,QACXoD,EAAegC,EAAS7D,KAAO4D,GAEjC,EAAKE,aAAaD,GAEd,EAAKxE,MAAMkC,cAAgB,IAC7BO,GACiB,EAAKzC,MAAMkC,gBAC1BO,EAAY,IACZF,GACgB,EAAKvC,MAAMjB,cACzBwD,EAAW,KAIfA,IACAE,EAAY,EACRF,GAAY,EAAKvC,MAAMjB,cACzBwD,EAAW,IAIf,EAAK1B,UAAS,SAACb,GAEb,MAAO,CACL6C,UAFY7C,EAAM6C,UAAU6B,OAAOF,GAGnC9B,cAAe1C,EAAM0C,cAAgB,EAAE,EAAK1C,MAAMkC,cAAgBqC,EAClE/B,aAAcA,EACdD,SAAUA,EACVE,UAAWA,OApCV3E,KAAKkC,MAAM0C,cAAgB5E,KAAKoF,aAAa7C,YAAcvC,KAAKkC,MAAMsC,mBAAoB,M,oCA2CjG,IAAIqC,EAAS7G,KAAKoF,aAAa0B,aAAa,EAAG,EAAG,OAC9CC,EAAO/G,KAAKoF,aAAa4B,qBAC7BD,EAAKF,OAASA,EACdE,EAAKV,MAAMrG,KAAKoF,aAAa7C,e,kCAGnBmD,GACV,IAAIuB,EAAY,EAChB,OAAQvB,EAAEwB,OAAO9H,MACf,IAAK,kBAGH,OAFA6H,EAAYE,SAASnH,KAAKkC,MAAMiB,OAAO,OACvCnD,KAAK+C,UAAS,SAAAb,GAAK,MAAK,CAAEiB,MAAO8D,EAAY/E,EAAMqB,SAAWrB,EAAMiB,MAAQ8D,MAE9E,IAAK,kBAGH,OAFAA,EAAYE,SAASnH,KAAKkC,MAAMiB,OAAO,OACvCnD,KAAK+C,UAAS,SAAAb,GAAK,MAAK,CAAEiB,MAAO8D,EAAY/E,EAAMmB,SAAWnB,EAAMiB,MAAQ8D,MAQhF,GAFAjH,KAAKuF,YAAYK,YAAY5F,KAAKkC,MAAM2C,UAAY,OAAS,SAEzD7E,KAAKkC,MAAM2C,UACb7E,KAAKoF,aAAagC,QAElBpH,KAAK+C,UAAS,SAAAb,GAAK,MAAK,CACtB2C,WAAY3C,EAAM2C,UAClBC,eAAe,EACfC,UAAW,GACXH,cAAe,EACfH,SAAU,EACVE,UAAW,UAGV,CACH,IAAIO,EAAetF,OAAOsF,cACrBtF,OAAOuF,qBACP,EACLnF,KAAKoF,aAAe,IAAIF,EAAa,CAAEG,WAAY,QAE9CrF,KAAKkC,MAAM4C,eACd9E,KAAKsF,cAGPtF,KAAK+C,UAAS,SAAAb,GAAK,MAAK,CACtB2C,WAAY3C,EAAM2C,UAClBC,eAAe,S,mCAKRY,GACW,gBAAlBA,EAAEwB,OAAO9H,KAIS,iBAAlBsG,EAAEwB,OAAO9H,KAKbY,KAAK+C,SAAS,CAAEI,MAAOuC,EAAEwB,OAAOzD,QAJ9BzD,KAAK+C,SAAS,CAAEqB,cAAesB,EAAEwB,OAAOzD,QAJxCzD,KAAK+C,SAAS,CAAE9B,YAAayE,EAAEwB,OAAOzD,U,+BAYxC,OACE,qCACE,cAAC,EAAD,CACEC,SAAU1D,KAAKmE,aACfjB,QAASlD,KAAKgF,YACd7B,MAAOnD,KAAKkC,MAAMiB,MAClBI,SAAUvD,KAAKkC,MAAMqB,SACrBF,SAAUrD,KAAKkC,MAAMmB,WAEvB,cAAC,EAAD,CACEF,MAAOnD,KAAKkC,MAAMiB,MAClBkE,IAAKrH,KAAKkC,MAAMwC,aAChBnD,UAAWvB,KAAKkC,MAAM2C,UACtBnC,MAAO1C,KAAKkC,MAAM6C,UAClBvC,aAAcxC,KAAKoF,aACnBnE,YAAajB,KAAKkC,MAAMjB,YACxBP,MAAOV,KAAKV,MAAMoB,QAEpB,cAACkD,EAAD,CACEH,MAAOzD,KAAKkC,MAAM2C,UAAY,OAAS,QACvC3B,QAASlD,KAAKgF,cAEhB,cAACd,EAAD,CACEjD,YAAajB,KAAKkC,MAAMjB,YACxBmD,cAAepE,KAAKkC,MAAMkC,cAC1BD,aAAcnE,KAAKmE,sB,GA9MU3E,IAAMwC,WC5ExBsF,E,kDACnB,WAAYhI,GAAQ,uCACZA,G,qDAIN,OACE,yBAAQuC,UAAU,SAAlB,UACE,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAiBiC,KAAMyD,MADzB,uBAGA,8BACE,wBAAQrE,QAASlD,KAAKV,MAAMkI,YAA5B,SAEyB,SAArBxH,KAAKV,MAAMoB,MACX,qCAAE,cAAC,IAAD,CAAiBoD,KAAM2D,MAAzB,uBAEA,qCAAE,cAAC,IAAD,CAAiB3D,KAAM4D,MAAzB,oC,GAjBsBlI,IAAMwC,WCUpC2F,E,kDACJ,WAAYrI,GAAQ,IAAD,8BACjB,cAAMA,IAED4C,MAAQ,CACX0F,WAAY,CACVjH,WAAY,UACZQ,MAAO,QAET0G,UAAW,CACTlH,WAAY,UACZQ,MAAO,WAETT,MAAO,QAGT,EAAK8G,YAAc,EAAKA,YAAY7H,KAAjB,gBAfF,E,0DAmBjBK,KAAK+C,UAAS,SAACb,GAAD,MAAY,CAAExB,MAAuB,SAAhBwB,EAAMxB,MAAmB,QAAU,a,+BAItE,OACE,qBAAKmB,UAAgC,SAArB7B,KAAKkC,MAAMxB,MAAmB,aAAe,cAA7D,SACE,sBAAKmB,UAAU,cAAf,UACE,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,CACEqB,QAAS,KACTsE,YAAaxH,KAAKwH,YAClB9G,MAAOV,KAAKkC,MAAMxB,QAEpB,cAAC,EAAD,CACEA,MAA4B,SAArBV,KAAKkC,MAAMxB,MAAmBV,KAAKkC,MAAM2F,UAAY7H,KAAKkC,MAAM0F,gBAG3E,mCACE,oBAAGE,KAAK,wCAAwCZ,OAAO,SAASa,IAAI,aAApE,UACE,cAAC,IAAD,CAAiBjE,KAAMkE,MADzB,uCAGA,kE,GAzCMxI,IAAMwC,WAmDxBiG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba799bc1.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = []\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"7c5f42a9d79e132aa533.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","/**\r\n * Contains the logic to render the visualizer\r\n * animation and resize the canvas element.\r\n */\r\n\r\nimport React from 'react';\r\n\r\nexport default class Canvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.canvasRef = React.createRef();\r\n    this.resetCanvas = this.resetCanvas.bind(this);\r\n\r\n    window.onorientationchange = this.resetCanvas;\r\n    window.onresize = this.resetCanvas;\r\n\r\n    this.curNote = null;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.resetCanvas();\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    this.drawCanvas();\r\n  }\r\n\r\n  resetCanvas() {\r\n    this.canvasRef.current.width = window.innerWidth;\r\n    window.scrollTo(0,0); \r\n    this.drawCanvas();\r\n  }\r\n  \r\n  drawCanvas() {\r\n    const canvas = this.canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.fillStyle = this.props.theme.background;\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    let circleRadius = Math.min(canvas.width / this.props.beatsPerBar / 5, 36);\r\n\r\n    for (let i = 0; i < this.props.beatsPerBar; i++) {\r\n      ctx.fillStyle = this.props.theme.light;\r\n      ctx.shadowBlur = 0;\r\n\r\n      if (this.props.curNote?.beat === i && this.props.curNote.click === 0) {\r\n        this.curNote = this.props.curNote;\r\n      }\r\n        \r\n      if (this.curNote?.beat === i) {\r\n        /* let percentage = this.props.percentage;\r\n        1-percentage > .9 ? ctx.globalAlpha = 1-percentage*9 : ctx.globalAlpha = 0;*/\r\n        if (this.props.isplaying) {\r\n          ctx.fillStyle = \"red\";\r\n          ctx.shadowColor = \"red\";\r\n          ctx.shadowBlur = circleRadius;\r\n        } else {\r\n          this.curNote = null;\r\n        }\r\n      }\r\n\r\n      ctx.beginPath();\r\n      ctx.arc(i * (canvas.width/this.props.beatsPerBar) + (canvas.width/this.props.beatsPerBar/2), canvas.height/2, circleRadius, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"visualizer\">\r\n        <canvas ref={this.canvasRef} id=\"canvas\" height=\"100\" width=\"100\"/>  \r\n      </div>\r\n    );\r\n  }\r\n}","/**\r\n * Uses requestAnimationFrame to update the current\r\n * \"note\" when it is time, based on the\r\n * audiocontext.currentTime.\r\n * \r\n * Also contains the canvas component.\r\n */\r\n\r\nimport React from 'react';\r\nimport Canvas from './Canvas.js';\r\n\r\nexport default class Animation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      lastNoteDrawn: null,\r\n      /* nextNoteTime: 0, */\r\n      /* percentage: 0, */\r\n      curNote: null,\r\n    }\r\n    \r\n    this.updateAnimation = this.updateAnimation.bind(this);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.rAF = requestAnimationFrame(this.updateAnimation);\r\n  }\r\n  \r\n  updateAnimation() {\r\n    if (this.props.isplaying) {\r\n\r\n      let currentTime = this.props.audiocontext.currentTime;\r\n      let notesInQueue = this.props.queue;\r\n      let currentNote = this.state.lastNoteDrawn;\r\n\r\n      while (notesInQueue.length && notesInQueue[0].time < currentTime) {\r\n          currentNote = notesInQueue[0];\r\n          notesInQueue.splice(0,1);\r\n      }\r\n\r\n      /* let percentage = ((60/this.props.tempo) - (this.props.nbt - currentTime)) / (60/this.props.tempo);\r\n      if (percentage < 0) percentage = 0;\r\n      if (percentage > 1) percentage = 1;\r\n\r\n      if (currentNote !== this.state.lastNoteDrawn) {\r\n\r\n        this.setState((state, props) => ({\r\n          percentage: percentage,\r\n          nextNoteTime: currentNote.time + (60 / props.tempo),\r\n        }));\r\n\r\n      } else {\r\n        this.setState((state, props) => ({\r\n          percentage: percentage\r\n        }));\r\n      } */\r\n\r\n      this.setState(() => ({\r\n        curNote: currentNote\r\n      }));\r\n    }\r\n\r\n    this.rAF = requestAnimationFrame(this.updateAnimation);\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    cancelAnimationFrame(this.rAF);\r\n  }\r\n  \r\n  render () {\r\n    return (\r\n      <Canvas \r\n        /* percentage={this.state.percentage}  */\r\n        isplaying={this.props.isplaying} \r\n        beatsPerBar={this.props.beatsPerBar}\r\n        curNote={this.state.curNote}\r\n        theme={this.props.theme}\r\n      />\r\n    );\r\n  }\r\n}","/**\r\n * Contains tempo label, increment/decrement tempo\r\n * buttons, and tempo slider.\r\n */\r\n\r\nimport React from 'react';\r\n\r\nexport default class TempoInputs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"tempo-input-row\">\r\n          <button \r\n            name={\"decrement-tempo\"} \r\n            onClick={this.props.onClick}  \r\n            className=\"btn-circle\"\r\n          >–</button>\r\n\r\n          <div className=\"tempo-label\">\r\n            <span id=\"tempo-label\">{this.props.tempo}</span><span className=\"bpm-label\">&nbsp;bpm</span>\r\n          </div>\r\n\r\n          <button \r\n            name={\"increment-tempo\"} \r\n            onClick={this.props.onClick} \r\n            className=\"btn-circle\"\r\n          >+</button>\r\n        </div>\r\n\r\n        <div className=\"slider-row\">\r\n          <input \r\n            type=\"range\" \r\n            id=\"tempo\" \r\n            min={this.props.minTempo} \r\n            max={this.props.maxTempo} \r\n            step=\"1\"\r\n            value={this.props.tempo}\r\n            onChange={this.props.onChange}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","/**\r\n * Contains the core metronome functionality and\r\n * acts as a wrapper for the metronome interface\r\n * components.\r\n * \r\n * Also contains the Note class and PlayButton and\r\n * Settings components.\r\n * \r\n * Metronome functionality based on the example here:\r\n * https://github.com/cwilso/metronome\r\n */\r\n\r\nimport React from 'react';\r\nimport worker from 'workerize-loader!./worker' // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faStop } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport Animation from './Animation';\r\nimport TempoInputs from './TempoInputs';\r\n\r\nclass Note {\r\n  constructor(time = 0, beat = 0, click = 0) {\r\n    this.time = time;\r\n    this.beat = beat;\r\n    this.click = click;\r\n  }\r\n}\r\n\r\nfunction PlayButton(props) {\r\n  const playElement = <FontAwesomeIcon icon={faPlay} />;\r\n  const stopElement = <FontAwesomeIcon icon={faStop} />;\r\n  return (\r\n    <div className=\"play-row\">\r\n      <button className=\"btn-circle large\" onClick={props.onClick} name=\"play-button\">\r\n        {props.value === \"Start\" ? playElement : stopElement}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Settings(props) {\r\n  return (\r\n    <div className=\"settings-row\">\r\n      <div className=\"select-wrapper\">\r\n        <select \r\n          value={props.beatsPerBar} \r\n          onChange={props.handleChange}\r\n          name=\"beat-select\"\r\n        >\r\n          <option value=\"2\">2/4</option>\r\n          <option value=\"3\">3/4</option>\r\n          <option value=\"4\">4/4</option>\r\n          <option value=\"5\">5/4</option>\r\n          <option value=\"6\">6/4</option>\r\n          <option value=\"7\">7/4</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"select-wrapper\">\r\n        <select \r\n          value={props.clicksPerBeat} \r\n          onChange={props.handleChange}\r\n          name=\"click-select\"\r\n        >\r\n          <option value=\"1\">1 click</option>\r\n          <option value=\"2\">2 clicks</option>\r\n          <option value=\"3\">3 clicks</option>\r\n          <option value=\"4\">4 clicks</option>\r\n          <option value=\"5\">5 clicks</option>\r\n          <option value=\"6\">6 clicks</option>\r\n          <option value=\"7\">7 clicks</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n/***\r\n * \r\n * MAIN METRONOME COMPONENT\r\n * \r\n ***/\r\n\r\nexport default class Metronome extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      noteLength: .05,\r\n      lookahead: 25,\r\n      scheduleAheadTime: .1,\r\n\r\n      tempo: 120,\r\n      maxTempo: 240,\r\n      minTempo: 30,\r\n\r\n      nextBeat: 0,\r\n      nextBeatTime: 0,\r\n\r\n      nextClick: 0,\r\n      nextClickTime: 0,\r\n\r\n      isPlaying: false,\r\n      audioUnlocked: false,\r\n      noteQueue: [],      \r\n\r\n      beatsPerBar: 4,\r\n      clicksPerBeat: 1,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleTick = this.handleTick.bind(this);\r\n\r\n    var AudioContext = window.AudioContext\r\n      || window.webkitAudioContext\r\n      || false; \r\n    this.audioContext = new AudioContext({ sampleRate: 44100 });\r\n    \r\n    this.unlockAudio();\r\n\r\n    this.timerWorker = worker();\r\n    this.timerWorker.onmessage = (e) => {\r\n      if (e.data === \"tick\") {\r\n        this.handleTick();\r\n      }\r\n      /* else\r\n        console.log(\"Worker: \" + e.data); */\r\n    };\r\n    this.timerWorker.postMessage({ \"interval\":this.state.lookahead });\r\n  }\r\n\r\n  scheduleNote(note) {\r\n    var osc = this.audioContext.createOscillator();\r\n    var gainNode = this.audioContext.createGain();\r\n    osc.connect(gainNode);\r\n    gainNode.connect(this.audioContext.destination);\r\n\r\n    if (note.beat !== 0) {\r\n      osc.frequency.value = 440.0;\r\n    } else {\r\n      osc.frequency.value = 880.0;\r\n    }\r\n    if (note.click !== 0) {\r\n      osc.frequency.value = 330.0;\r\n    }\r\n\r\n    osc.start(this.state.nextClickTime);\r\n    gainNode.gain.setTargetAtTime(0, this.state.nextClickTime + this.state.noteLength, 0.015);\r\n    osc.stop(this.state.nextClickTime + this.state.noteLength*2);\r\n  }\r\n\r\n  handleTick() {\r\n    if (!this.state.isPlaying) return;\r\n\r\n    while (this.state.nextClickTime < this.audioContext.currentTime + this.state.scheduleAheadTime) {  \r\n      let nextBeat = this.state.nextBeat;\r\n      let nextClick = this.state.nextClick;\r\n      let secondsPerBeat = 60.0 / this.state.tempo;\r\n      let nextBeatTime = this.state.nextBeatTime;\r\n    \r\n      let nextNote = new Note(this.state.nextClickTime, nextBeat, nextClick);  \r\n      if (nextNote.click === 0) {\r\n        nextBeatTime = nextNote.time + secondsPerBeat;\r\n      }\r\n      this.scheduleNote(nextNote);\r\n\r\n      if (this.state.clicksPerBeat > 1) {\r\n        nextClick++;\r\n        if (nextClick >= this.state.clicksPerBeat) {\r\n          nextClick = 0;\r\n          nextBeat++;\r\n          if (nextBeat >= this.state.beatsPerBar) {\r\n            nextBeat = 0;\r\n          }\r\n        }\r\n      } else {\r\n        nextBeat++;\r\n        nextClick = 0;\r\n        if (nextBeat >= this.state.beatsPerBar) {\r\n          nextBeat = 0;\r\n        }\r\n      }\r\n\r\n      this.setState((state) => {\r\n        const queue = state.noteQueue.concat(nextNote);\r\n        return {\r\n          noteQueue: queue,\r\n          nextClickTime: state.nextClickTime + 1/this.state.clicksPerBeat * secondsPerBeat,\r\n          nextBeatTime: nextBeatTime,\r\n          nextBeat: nextBeat,\r\n          nextClick: nextClick\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  unlockAudio() {\r\n    var buffer = this.audioContext.createBuffer(1, 1, 22050);\r\n    var node = this.audioContext.createBufferSource();\r\n    node.buffer = buffer;\r\n    node.start(this.audioContext.currentTime);\r\n  }\r\n  \r\n  handleClick(e) {\r\n    let nextTempo = 0;\r\n    switch (e.target.name) {\r\n      case \"increment-tempo\":\r\n        nextTempo = parseInt(this.state.tempo)+1;\r\n        this.setState(state => ({ tempo: nextTempo > state.maxTempo ? state.tempo : nextTempo }));\r\n        return;\r\n      case \"decrement-tempo\":\r\n        nextTempo = parseInt(this.state.tempo)-1;\r\n        this.setState(state => ({ tempo: nextTempo < state.minTempo ? state.tempo : nextTempo }));\r\n        return;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.timerWorker.postMessage(this.state.isPlaying ? \"stop\" : \"start\");\r\n\r\n    if (this.state.isPlaying) {\r\n      this.audioContext.close();\r\n\r\n      this.setState(state => ({\r\n        isPlaying: !state.isPlaying,\r\n        audioUnlocked: false,\r\n        noteQueue: [],\r\n        nextClickTime: 0,\r\n        nextBeat: 0,\r\n        nextClick: 0\r\n      }));\r\n    }\r\n    else {\r\n      let AudioContext = window.AudioContext\r\n        || window.webkitAudioContext\r\n        || false; \r\n      this.audioContext = new AudioContext({ sampleRate: 44100 });\r\n                      \r\n      if (!this.state.audioUnlocked) {\r\n        this.unlockAudio();\r\n      }\r\n\r\n      this.setState(state => ({\r\n        isPlaying: !state.isPlaying,\r\n        audioUnlocked: true\r\n      }));\r\n    }\r\n  }\r\n  \r\n  handleChange(e) {\r\n    if (e.target.name === \"beat-select\") {\r\n      this.setState({ beatsPerBar: e.target.value });\r\n      return;\r\n    }\r\n    if (e.target.name === \"click-select\") {\r\n      this.setState({ clicksPerBeat: e.target.value });\r\n      return;\r\n    }\r\n\r\n    this.setState({ tempo: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <TempoInputs \r\n          onChange={this.handleChange} \r\n          onClick={this.handleClick} \r\n          tempo={this.state.tempo} \r\n          maxTempo={this.state.maxTempo} \r\n          minTempo={this.state.minTempo} \r\n        />\r\n        <Animation \r\n          tempo={this.state.tempo} \r\n          nbt={this.state.nextBeatTime} \r\n          isplaying={this.state.isPlaying} \r\n          queue={this.state.noteQueue} \r\n          audiocontext={this.audioContext} \r\n          beatsPerBar={this.state.beatsPerBar} \r\n          theme={this.props.theme}\r\n        />\r\n        <PlayButton \r\n          value={this.state.isPlaying ? \"Stop\" : \"Start\"} \r\n          onClick={this.handleClick} \r\n        />\r\n        <Settings \r\n          beatsPerBar={this.state.beatsPerBar} \r\n          clicksPerBeat={this.state.clicksPerBeat} \r\n          handleChange={this.handleChange}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}","/**\r\n * Contains upper header including logo and\r\n * dark mode/light mode toggle button.\r\n */\r\n\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic, faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default class Navbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"navbar\">\r\n        <div className=\"logo\">\r\n          <FontAwesomeIcon icon={faMusic} />&nbsp;&nbsp;Metronome\r\n        </div>\r\n        <div>\r\n          <button onClick={this.props.toggleTheme}>\r\n            {\r\n              this.props.theme === \"dark\" ? \r\n              <><FontAwesomeIcon icon={faSun} />&nbsp;&nbsp;Too dark?</>\r\n              :\r\n              <><FontAwesomeIcon icon={faMoon} />&nbsp;&nbsp;Too bright?</>\r\n            }\r\n          </button>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}","/**\n * Includes initial ReactDOM.render(), in addition\n * to theming functionality.\n * \n * Acts as a wrapper to the rest of the components.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'normalize.css';\nimport './styles/main.css';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nimport Metronome from './Metronome';\nimport Navbar from './Navbar';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lightTheme: {\n        background: \"#f0f0f0\",\n        light: \"#ccc\",\n      },\n      darkTheme: {\n        background: \"#424242\",\n        light: \"#595959\"\n      },\n      theme: \"dark\"\n    };\n\n    this.toggleTheme = this.toggleTheme.bind(this);\n  }\n\n  toggleTheme() {\n    this.setState((state) => ({ theme: state.theme === \"dark\" ? \"light\" : \"dark\"}));\n  }\n\n  render() {\n    return(\n      <div className={this.state.theme === \"dark\" ? \"theme-dark\" : \"theme-light\"}>\n        <div className=\"app-wrapper\">\n          <div className=\"app\">\n            <Navbar \n              onClick={null} \n              toggleTheme={this.toggleTheme} \n              theme={this.state.theme} \n            />\n            <Metronome \n              theme={this.state.theme === \"dark\" ? this.state.darkTheme : this.state.lightTheme} \n            />\n          </div>  \n          <footer>\n            <a href=\"https://github.com/aviolin/metronome/\" target=\"_blank\" rel=\"noreferrer\">\n              <FontAwesomeIcon icon={faGithub} />&nbsp;&nbsp;View the source on Github\n            </a>\n            <p>&copy; 2021, Arlo Adams</p>\n          </footer>\n        </div>\n      </div>\n    ); \n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}